@model AutosExchange.Models.Listing

@{
    ViewBag.Title = "Create";
}

    <h2>Create</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Listing</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ListerId)

    <div class="form-group">
        @Html.LabelFor(model => model.VIN, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.VIN, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VIN, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Make, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Make, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Trim, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Trim, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Trim, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.KM, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.KM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.KM, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        New Car
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.isNewCar)
                @Html.ValidationMessageFor(model => model.isNewCar, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        Vehicle Type
        <div class="col-md-10">
            @Html.EditorFor(model => model.CarType, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CarType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Drivetrain, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Drivetrain, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Drivetrain, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        Fuel Type
        <div class="col-md-10">
            @Html.EditorFor(model => model.FuelType, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FuelType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Transmission, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Transmission, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Transmission, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        Fuel Economy
        <div class="col-md-10">
            @Html.EditorFor(model => model.FuelEconomy, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FuelEconomy, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        Available
        <div class="col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.isAvailable, new { @checked = "checked" })
                @Html.ValidationMessageFor(model => model.isAvailable, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        Price
        <div class="col-md-10">
            @Html.EditorFor(model => model.SoldPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SoldPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        Photo URL
        <div class="col-md-10">
            @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
