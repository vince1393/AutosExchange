@model IEnumerable<AutosExchange.Models.ListingUser>

@{
    ViewBag.Title = "New & Used Vehicles for Sale";
}

<h2>@ViewBag.Title</h2>
<style>
    img{
    align-self: center;
    max-width: 350px;
    height:auto;
    max-height: 40vh;
    margin: 5px 5px;
    border-radius: 7px;
    transition: ease all .7s;
    }

    .bold{
    font-weight: bold;
    margin: 0px;
    font-size: 1.1em;
    }

    .fact{
    align-self: center;
    margin: 3px;
    font-size: 1.2em;
    transition: ease all .5s;
    }

    .mat-tab-body{
    border: grey 1px solid;
    border-radius: 8px;
    }

    .tile{
    border: lightgrey 2px solid;
    border-radius: 8px;
    display:flex;
    flex-direction: row;
    margin:20px;
    }

        .factContainer{
        display: grid;
        grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
        grid-template-rows: 1fr 1fr 1fr;
        justify-content: center;
        flex-direction: column;
        margin: 5px 0px;
        width:100%;
    }



</style>
@foreach (var item in Model)
{
    if (item.isAvailable)
    {
<div class="tile">
    <img src="@item.Photo" alt=""  width:auto;" />
    <div class="factContainer">
        <div class="fact">
            <p class="bold">
                Price
            </p>
            @(item.SoldPrice.HasValue ? item.SoldPrice.ToString() : "Please Contact")
            </div>
        <div class="fact">
            <p class="bold">
                @Html.DisplayNameFor(model => model.VIN)
            </p>
            @Html.DisplayFor(modelItem => item.VIN)
        </div>
        <div class="fact">
            <p class="bold">
                @Html.DisplayNameFor(model => model.Year)
            </p>
            @Html.DisplayFor(modelItem => item.Year)
        </div>
        <div class="fact">
            <p class="bold">
                @Html.DisplayNameFor(model => model.Make)
            </p>
            @Html.DisplayFor(modelItem => item.Make)
        </div>
        <div class="fact">
            <p class="bold">
                @Html.DisplayNameFor(model => model.Model)
            </p>
            @Html.DisplayFor(modelItem => item.Model)
        </div>
        <div class="fact">
            <p class="bold">
                @Html.DisplayNameFor(model => model.Trim)
            </p>
            @Html.DisplayFor(modelItem => item.Trim)
        </div>
        <div class="fact">
            <p class="bold">
                Kilometers
            </p>
            @(item.KM.ToString() + "km")
        </div>
        <div class="fact">
            <p class="bold">
                New or Used
            </p>
            @(item.isNewCar ? "New" : "Used")
        </div>
        <div class="fact">
            <p class="bold">
                Type
            </p>
            @Html.DisplayFor(modelItem => item.CarType)
        </div>
        <div class="fact">
            <p class="bold">
                @Html.DisplayNameFor(model => model.Color)
            </p>
            @Html.DisplayFor(modelItem => item.Color)
        </div>
        <div class="fact">
            <p class="bold">
                @Html.DisplayNameFor(model => model.Drivetrain)
            </p>
            @Html.DisplayFor(modelItem => item.Drivetrain)
        </div>
        <div class="fact">
            <p class="bold">
                @Html.DisplayNameFor(model => model.Transmission)
            </p>
            @Html.DisplayFor(modelItem => item.Transmission)
        </div>
        <div class="fact">
            <p class="bold">
                Fuel Economy
            </p>
            @(item.FuelEconomy.ToString() + " l/100km")
        </div>
        <div class="fact">
            <p class="bold">
                Fuel Type
            </p>
            @Html.DisplayFor(modelItem => item.FuelType)
        </div>
        <div class="fact">
            <p class="bold">
                @Html.DisplayNameFor(model => model.Name)
            </p>
            @Html.DisplayFor(modelItem => item.Name)
        </div>
        <div class="fact">
            <p class="bold">
                @Html.DisplayNameFor(model => model.Address)
            </p>
            @Html.DisplayFor(modelItem => item.Address)
        </div>
        <div class="fact">
            <p class="bold">
                @Html.DisplayNameFor(model => model.City)
            </p>
            @Html.DisplayFor(modelItem => item.City)
        </div>
        <div class="fact">
            <p class="bold">
                @Html.DisplayNameFor(model => model.Province)
            </p>
            @Html.DisplayFor(modelItem => item.Province)
        </div>
        <div class="fact">
            <p class="bold">
                @Html.DisplayNameFor(model => model.Website)
            </p>
            @Html.DisplayFor(modelItem => item.Website)
        </div>
        </div>
    </div>
    }
}